{
  "version": 3,
  "sources": ["../src/AbstractWamEnv.js", "../src/AbstractWamGroup.js", "../src/AbstractWamNode.js", "../src/AbstractWamParameter.js", "../src/AbstractWamParameterInfo.js", "../src/AbstractWamProcessor.js", "../src/AbstractWebAudioModule.js", "../src/version.js"],
  "sourcesContent": ["/** @typedef {import('./types').WamEnv} IWamEnv */\n\n/**\n * The function can be stringified using `function.toString()`,\n * then inject to the audio thread using `URL.createObjectURL()`.\n * See `addFunctionModule` in the SDK.\n \n * @param {string} apiVersion\n */\nconst getWamEnv = (apiVersion) => {\n\t/**\n\t * WebAudioModule v2 WamEnv API in AudioWorkletGlobalScope,\n\t * see d.ts file for more information.\n\t * @abstract\n\t * @implements {IWamEnv}\n\t */\n\tclass WamEnv {\n\t\tget apiVersion() { throw new Error('Not Implemented.'); return null; }\n\n\t\tgetModuleScope(moduleId) { throw new Error('Not Implemented.'); return null; }\n\n\t\tgetGroup(groupId, groupKey) { throw new Error('Not Implemented.'); return null; }\n\n\t\taddGroup(group) { throw new Error('Not Implemented.'); return null; }\n\n\t\tremoveGroup(group) { throw new Error('Not Implemented.'); return null; }\n\t\n\t\taddWam(wam) { throw new Error('Not Implemented.'); return null; }\n\n\t\tremoveWam(wam) { throw new Error('Not Implemented.'); return null; }\n\t\n\t\tconnectEvents(groupId, fromId, toId, output) { throw new Error('Not Implemented.'); return null; }\n\n\t\tdisconnectEvents(groupId, fromId, toId, output) { throw new Error('Not Implemented.'); return null; }\n\n\t\temitEvents(from, ...events) { throw new Error('Not Implemented.'); return null; }\n\t}\n\t\n\treturn WamEnv;\n};\n\nexport default getWamEnv;\n", "/** @typedef {import('./types').WamGroup} IWamGroup */\n\n/**\n * The function can be stringified using `function.toString()`,\n * then inject to the audio thread using `URL.createObjectURL()`.\n * See `addFunctionModule` in the SDK.\n */\n/** @param {string} groupId */\n/** @param {string} groupKey */\nconst initializeWamGroup = (groupId, groupKey) => {\n\t/**\n\t * WebAudioModule v2 WamEnv API in AudioWorkletGlobalScope,\n\t * see d.ts file for more information.\n\t * @abstract\n\t * @implements {IWamGroup}\n\t */\n\tclass WamGroup {\n\t\tget groupId() { throw new Error('Not Implemented.'); return null; }\n\n\t\tvalidate(groupKey) { throw new Error('Not Implemented.'); return null; }\n\n\t\taddWam(wam) { throw new Error('Not Implemented.'); return null; }\n\n\t\tremoveWam(wam) { throw new Error('Not Implemented.'); return null; }\n\t\n\t\tconnectEvents(fromId, toId, output) { throw new Error('Not Implemented.'); return null; }\n\n\t\tdisconnectEvents(fromId, toId, output) { throw new Error('Not Implemented.'); return null; }\n\n\t\temitEvents(from, ...events) { throw new Error('Not Implemented.'); return null; }\n\t}\n\t\n\treturn WamGroup;\n};\n\nexport default initializeWamGroup;\n", "/** @typedef {import('./types').WamNode} IWamNode */\n\n/**\n * WebAudioModule v2 Main AudioNode API,\n * can be used to build a CompositeNode, see d.ts file for more information.\n * @abstract\n * @implements {IWamNode}\n */\nexport default class WamNode extends AudioWorkletNode {\n\tconstructor(module, options) {\n\t\tsuper(module.audioContext, module.moduleId, options);\n\t}\n\n\tget groupId() { throw new Error('Not Implemented.'); return null; }\n\n\tget moduleId() { throw new Error('Not Implemented.'); return null; }\n\n\tget instanceId() { throw new Error('Not Implemented.'); return null; }\n\n\tget module() { throw new Error('Not Implemented.'); return null; }\n\n\tasync getCompensationDelay() { throw new Error('Not Implemented.'); return null; }\n\n\tasync getParameterInfo(...parameterIdQuery) { throw new Error('Not Implemented.'); return null; }\n\n\tasync getParameterValues(normalized, ...parameterIdQuery) { throw new Error('Not Implemented.'); return null; }\n\n\tasync setParameterValues(parameterValues) { throw new Error('Not Implemented.'); }\n\n\tasync getState() { throw new Error('Not Implemented.'); return null; }\n\tasync setState(state) { throw new Error('Not Implemented.'); }\n\n\tscheduleEvents(...events) { throw new Error('Not Implemented.'); }\n\n\tasync clearEvents() { throw new Error('Not Implemented.'); }\n\n\tconnectEvents(toId, output) { throw new Error('Not Implemented.'); }\n\n\tdisconnectEvents(toId, output) { throw new Error('Not Implemented.'); }\n\n\tdestroy() { throw new Error('Not Implemented.'); }\n}\n", "/** @typedef {import('./types').WamParameter} IWamParameter */\n\n/**\n * WebAudioModule v2 Parameter API,\n * see d.ts file for more information.\n * @abstract\n * @implements {IWamParameter}\n */\nexport default class WamParameter {\n\tconstructor(info) {}\n\n\tget info() { throw new Error('Not Implemented.'); return null; }\n\n\tget value() { throw new Error('Not Implemented.'); return null; }\n\tset value(value) { throw new Error('Not Implemented.'); }\n\n\tget normalizedValue() { throw new Error('Not Implemented.'); return null; }\n\tset normalizedValue(normalizedValue) { throw new Error('Not Implemented.'); }\n}\n", "/** @typedef {import('./types').WamParameterInfo} IWamParameterInfo */\n\n/**\n * WebAudioModule v2 ParameterInfo API,\n * see d.ts file for more information.\n * @abstract\n * @implements {IWamParameterInfo}\n */\nexport default class WamParameterInfo {\n    constructor(id, config) {}\n\n\tget id() { throw new Error('Not Implemented.'); return null; }\n\n    get label() { throw new Error('Not Implemented.'); return null; }\n    get type() { throw new Error('Not Implemented.'); return null; }\n    get defaultValue() { throw new Error('Not Implemented.'); return null; }\n    get minValue() { throw new Error('Not Implemented.'); return null; }\n    get maxValue() { throw new Error('Not Implemented.'); return null; }\n    get discreteStep() { throw new Error('Not Implemented.'); return null; }\n    get exponent() { throw new Error('Not Implemented.'); return null; }\n    get choices() { throw new Error('Not Implemented.'); return null; }\n    get units() { throw new Error('Not Implemented.'); return null; }\n\n    normalize(value) { throw new Error('Not Implemented.'); return null; }\n\n\tdenormalize(value) { throw new Error('Not Implemented.'); return null; }\n\n\tvalueString(value) { throw new Error('Not Implemented.'); return null; }\n}\n", "/** @typedef {import('./types').WamProcessor} IWamProcessor */\n\n/**\n * The function can be stringified using `function.toString()`,\n * then inject to the audio thread using `URL.createObjectURL()`.\n * See `addFunctionModule` in the SDK.\n */\nconst getWamProcessor = (moduleId) => {\n\t/** @type {import('./types').AudioWorkletGlobalScope} */\n\tconst { AudioWorkletProcessor } = globalThis;\n\n\t/**\n\t * WebAudioModule v2 Processor API,\n\t * used in the audio thread, see d.ts file for more information.\n\t * @abstract\n\t * @implements {IWamProcessor}\n\t */\n\tclass WamProcessor extends AudioWorkletProcessor {\n\t\tget groupId() { throw new Error('Not Implemented.'); return null; }\n\n\t\tget moduleId() { throw new Error('Not Implemented.'); return null; }\n\t\n\t\tget instanceId() { throw new Error('Not Implemented.'); return null; }\n\t\n\t\tgetCompensationDelay() { throw new Error('Not Implemented.'); return null; }\n\t\n\t\tscheduleEvents(...events) { throw new Error('Not Implemented.'); }\n\t\n\t\temitEvents(...events) { throw new Error('Not Implemented.'); }\n\t\n\t\tclearEvents() { throw new Error('Not Implemented.'); }\n\t\n\t\tdestroy() { throw new Error('Not Implemented.'); }\n\t}\n\t\n\treturn WamProcessor;\n};\n\nexport default getWamProcessor;\n", "/** @typedef {import('./types').WamDescriptor} IWamDescriptor */\n/** @typedef {import('./types').WamNode} IWamNode */\n/** @typedef {import('./types').WebAudioModule} IWebAudioModule */\n\n/**\n * WebAudioModule v2 Main Class API,\n * see d.ts file for more information.\n * @abstract\n * @implements {IWebAudioModule}\n */\nexport default class WebAudioModule {\n\tstatic get isWebAudioModuleConstructor() { throw new Error('Not Implemented.'); return null; }\n\n\tstatic async createInstance(groupId, audioContext, initialState) { throw new Error('Not Implemented.'); return null; }\n\n\tconstructor(groupId, audioContext) {}\n\n\tget isWebAudioModule() { throw new Error('Not Implemented.'); return null; }\n\n\tget audioContext() { throw new Error('Not Implemented.'); return null; }\n\tset audioContext(audioContext) { throw new Error('Not Implemented.'); }\n\n\tget audioNode() { throw new Error('Not Implemented.'); return null; }\n\tset audioNode(audioNode) { throw new Error('Not Implemented.'); }\n\n\tget initialized() { throw new Error('Not Implemented.'); return null; }\n\tset initialized(initialized) { throw new Error('Not Implemented.'); }\n\n\tget groupId() { throw new Error('Not Implemented.'); return null; }\n\t\n\tget moduleId() { throw new Error('Not Implemented.'); return null; }\n\n\tget instanceId() { throw new Error('Not Implemented.'); return null; }\n\tset instanceId(instanceId) { throw new Error('Not Implemented.'); }\n\n\tget descriptor() { throw new Error('Not Implemented.'); return null; }\n\n\tget identifier() { throw new Error('Not Implemented.'); return null; }\n\n\tget name() { throw new Error('Not Implemented.'); return null; }\n\n\tget vendor() { throw new Error('Not Implemented.'); return null; }\n\n\tasync initialize(state) { throw new Error('Not Implemented.'); return null; }\n\n\tasync createAudioNode(initialState) { throw new Error('Not Implemented.'); return null; }\n\n\tasync createGui() { throw new Error('Not Implemented.'); return null; }\n\n\tdestroyGui(gui) { throw new Error('Not Implemented.'); }\n}\n", "export default \"2.0.0-alpha.5\";\n"],
  "mappings": "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",
  "names": []
}
